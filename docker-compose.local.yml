volumes:
  market_local_postgres_data: {}
  market_local_postgres_data_backups: {}
  market_local_redis_data: {}
  esdata: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: market_local_django
    container_name: market_local_django
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      mailpit:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: market_production_postgres
    container_name: market_local_postgres
    volumes:
      - market_local_postgres_data:/var/lib/postgresql/data
      - market_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  mailpit:
    image: docker.io/axllent/mailpit:latest
    container_name: market_local_mailpit
    ports:
      - "8025:8025"

  redis:
    image: docker.io/redis:6
    container_name: market_local_redis
    volumes:
      - market_local_redis_data:/data

  celeryworker:
    <<: *django
    image: market_local_celeryworker
    container_name: market_local_celeryworker
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_started
      mailpit:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: market_local_celerybeat
    container_name: market_local_celerybeat
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_started
      mailpit:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: market_local_flower
    container_name: market_local_flower
    ports:
      - '5555:5555'
    command: /start-flower

  elasticsearch:
    image: docker.io/elasticsearch:7.17.13
    container_name: market_local_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 10s
      timeout: 10s
      retries: 5
